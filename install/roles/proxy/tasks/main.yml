---
#
# This file is part of Callisto software
# Callisto helps scientists to share data between collaborators
#
# Callisto is free software: you can redistribute it and/or modify
# it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
#  Copyright (C) 2019-2021    C A L M I P
#  callisto is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU AFFERO GENERAL PUBLIC LICENSE for more details.
#
#  You should have received a copy of the GNU AFFERO GENERAL PUBLIC LICENSE
#  along with Callisto.  If not, see <http://www.gnu.org/licenses/agpl-3.0.txt>.
#
#  Authors:
#        Thierry Louge      - C.N.R.S. - UMS 3667 - CALMIP
#        Emmanuel Courcelle - C.N.R.S. - UMS 3667 - CALMIP
#

# tasks file for proxy
- name: launching rewrite module
  apache2_module:
     name: "rewrite"
     state: present
  notify: restart apache

- name: Uploading certificates
  copy:
     src:  ssl
     dest: /etc/httpd
     owner: root
     group: root
     mode: '0644'
     force: no
     backup: no 
  notify: restart apache

- name: protecting key
  file:
    path: /etc/httpd/ssl/key.pem
    state: file
    owner: root
    group: root
    mode: '0400'
  notify: restart apache

- name: installing the certificate for the generic ssl.conf file (1/3)
  lineinfile:
     path: "/etc/httpd/conf.d/ssl.conf"
     regexp: "^SSLCertificateFile "
     line: "SSLCertificateFile /etc/httpd/ssl/cert.pem"
     state: present
  when: callisto_living_on == "server"

- name: installing the certificate for the generic ssl.conf file (2/3)
  lineinfile:
     path: "/etc/httpd/conf.d/ssl.conf"
     regexp: "^SSLCertificateKeyFile "
     line: "SSLCertificateKeyFile /etc/httpd/ssl/key.pem"
     state: present
  when: callisto_living_on == "server"

- name: installing the certificate for the generic ssl.conf file (3/3)
  lineinfile:
     path: "/etc/httpd/conf.d/ssl.conf"
     regexp: "^SSLCACertificateFile "
     line: "SSLCACertificateFile /etc/httpd/ssl/chain.pem"
     state: present
  when: callisto_living_on == "server"

- name: installing configuration file for dataverse
  template:
     src:  dataverse.conf
     dest: /etc/httpd/conf.d/dataverse.conf
     owner: root
     group: root
     mode: '0644'
     backup: yes
  notify: restart apache

- name: on laptop, mocking shibboleth
  copy:
     src: mockShib
     dest: /etc/httpd/conf.d
     owner: root
     group: root
     mode: '0644'
     backup: no
  notify: restart apache
  when: callisto_living_on == "laptop"

- name: on server, adding shibboleth repository
  yum_repository:
    name:        shibboleth
    description: Shibboleth YUM repo
    state:       present
    mirrorlist:  https://shibboleth.net/cgi-bin/mirrorlist.cgi/CentOS_7
    gpgcheck:    yes
    gpgkey:      https://shibboleth.net/downloads/service-provider/RPMS/repomd.xml.key
  when: callisto_living_on == "server"

- name: on server, installing shibboleth
  yum:
    name:
       - shibboleth
    update_cache: true
    state: latest
  when: callisto_living_on == "server"
  notify:
    - restart shibd
    - restart apache

- name: On server, ensure shibd is running and enabled
  service: name=shibd state=started enabled=yes
  when: callisto_living_on == "server"

# See http://guides.dataverse.org/en/latest/installation/shibboleth.html
- name: on server, configuring shibboleth (1/3)
  copy:
     src: attribute-map.xml 
     dest: /etc/shibboleth
     owner: root
     group: root
     mode: '0644'
     backup: no
  notify: restart shibd
  when: callisto_living_on == "server"

# See https://services.renater.fr/federation/documentation/guides-installation/sp3/chap05
- name: on server, configuring shibboleth (2/3)
  template:
     src: shibboleth2.xml
     dest: /etc/shibboleth/shibboleth2.xml
     owner: root
     group: root
     mode: '0644'
     backup: no
  notify: restart shibd
  when: callisto_living_on == "server"

- name: on server, configuring shibboleth (3/3)
  copy:
     src: "{{ shibd_metadata_cert }}"
     dest: /etc/shibboleth/{{ shibd_metadata_cert }}
     owner: root
     group: root
     mode: '0644'
     backup: no
  notify: restart shibd
  when: callisto_living_on == "server"

- name: The files for the maintenance page
  copy:
     src: maintenance
     dest: /var/www/html
     owner: root
     group: root
     mode: '0644'
     backup: no

- name: creating directories for callisto configuration files
  file:
    path: "/etc/httpd/conf.d/{{item}}"
    state: directory
    owner: apache
    group: root
    mode: '0740'
  loop:
     - callisto
     - maintenance

- name: installing configuration files to callisto directory
  template:
     src:  "{{item}}"
     dest: /etc/httpd/conf.d/callisto
     owner: root
     group: root
     mode: '0644'
     backup: yes
  loop:
     - portal.conf
     - dataverse.conf
     - allegro.conf 
     - ssl.conf
     - welcome.conf
  notify: restart apache

- name: installing configuration files to maintenance directory
  template:
     src:  "{{item}}"
     dest: /etc/httpd/conf.d/maintenance
     owner: root
     group: root
     mode: '0644'
     backup: yes
  loop:
     - portal.maintenance.conf
     - ssl.conf
     - welcome.conf
  notify: restart apache

- name: exiting from maintenance mode
  command: bash -c 'rm *.conf && for f in callisto/*.conf; do ln -s $f; done'
  args:
     chdir: /etc/httpd/conf.d
